# ---
# - name: Slurp CA certificate from ansible host
#   slurp:
#     src: "/etc/kubernetes/pki/{{ item }}"
#   with_items:
#     - apiserver.crt
#     - apiserver-etcd-client.crt
#     - apiserver-etcd-client.key
#     - apiserver.key
#     - apiserver-kubelet-client.crt
#     - apiserver-kubelet-client.key
#     - ca.crt
#     - ca.key
#     - front-proxy-ca.crt
#     - front-proxy-ca.key
#     - front-proxy-client.crt
#     - front-proxy-client.key
#     - sa.key
#     - sa.pub
#   register: pki_certs
#   run_once: true
#   delegate_to: "{{ groups.master | first }}"

# - name: Create kubernetes cert directory
#   file:
#     path: /etc/kubernetes/pki/etcd
#     state: directory

# - name: Write CA certificate from ansible host to disk
#   copy:
#     dest: "/etc/kubernetes/pki/{{ item.item }}"
#     content: "{{ item.content | b64decode }}"
#   register: openssl_cert
#   with_items: "{{ pki_certs.results }}"

# - name: Slurp ETCD certificate from ansible host
#   slurp:
#     src: "/etc/kubernetes/pki/etcd/{{ item }}"
#   with_items:
#     - ca.crt
#     - ca.key
#     - healthcheck-client.crt
#     - healthcheck-client.key
#     - peer.crt
#     - peer.key
#     - server.crt
#     - server.key
#   register: etcd_certs
#   run_once: true
#   delegate_to: "{{ groups.master | first }}"

# - name: Write CA certificate from ansible host to disk
#   copy:
#     dest: "/etc/kubernetes/pki/etcd/{{ item.item }}"
#     content: "{{ item.content | b64decode }}"
#   register: etcd_cert
#   with_items: "{{ etcd_certs.results }}"

# - name: Slurp admin.conf from ansible host
#   slurp:
#     src: "/etc/kubernetes/{{ item }}"
#   with_items:
#     - admin.conf
#   register: admin_conf
#   run_once: true
#   delegate_to: "{{ groups.master | first }}"

# - name: Write admin.conf
#   copy:
#     dest: "/etc/kubernetes/{{ item.item }}"
#     content: "{{ item.content | b64decode }}"
#   register: etcd_cert
#   with_items: "{{ admin_conf.results }}"

# - name: Run kubeadm
#   shell: "kubeadm init phase certs all --config /etc/kubernetes/kubeadm-config.yaml &&
# kubeadm init phase kubeconfig all --config /etc/kubernetes/kubeadm-config.yaml &&
# kubeadm init phase kubelet-start --config /etc/kubernetes/kubeadm-config.yaml &&
# kubeadm init phase control-plane all --config /etc/kubernetes/kubeadm-config.yaml"

- name: Run kubeadm join
  shell: "kubeadm join {{keepalived.ip}}:443 --token {{ k8s.token }} --discovery-token-unsafe-skip-ca-verification"
